import requests
from urllib.parse import urlparse, parse_qs, urlencode

def scan_xss(url):
    parsed_url = urlparse(url)
    query_params = parse_qs(parsed_url.query)

    print(f"Start to request url: {url}")

    xss_payloads = ["<script>alert(1)</script>", "'';!--\"<XSS>=&{()}", "<img src=x onerror=alert(1)>"]

    vulnerable = False
    results = []

    for param in query_params:
        for payload in xss_payloads:
            modified_params = query_params.copy()
            modified_params[param] = payload
            modified_query = urlencode(modified_params, doseq=True)
            modified_url = parsed_url._replace(query=modified_query).geturl()

            response = requests.get(modified_url)
            if payload in response.text:
                print(f"Reflected XSS found in: {modified_url}")
                results.append({
                    'param': param,
                    'payload': payload,
                    'url': modified_url
                })
                vulnerable = True

    if not vulnerable:
        print("No XSS found!")
    return results

def print_results(results):
    print(f"{'ID':<5}{'VUL':<20}{'URL':<50}{'POC':<50}")
    print('-' * 125)
    for i, result in enumerate(results, 1):
        print(f"{i:<5}Reflected XSS {result['url']:<50}{result['payload']:<50}")

if __name__ == "__main__":
    import argparse

    parser = argparse.ArgumentParser(description='XSS Scanner')
    parser.add_argument('--url', '-u', help='The target site to scan.')
    args = parser.parse_args()

    if not args.url:
        print("error: missing a mandatory option (--url)!")
    else:
        results = scan_xss(args.url)
        print_results(results)


python3 xss_scanner.py --url="http://example.com/?param1=value1&param2=value2"

Simpan kode di atas ke dalam file bernama xss_scanner.py
